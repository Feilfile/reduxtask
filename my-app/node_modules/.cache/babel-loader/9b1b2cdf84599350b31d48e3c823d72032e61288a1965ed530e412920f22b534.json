{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from \"axios\";\nimport io from 'socket.io-client';\nconst socket = io.connect(\"http://localhost:3001\");\nconst loginAsync = createAsyncThunk('login/loginAsync', async (credentials, thunkAPI) => {\n  console.log(credentials);\n  const response = socket.post(\"/users/login\", credentials);\n  socket.emit(\"request_login\", credentials);\n  console.log(response);\n\n  //console.log(response);\n  //const response = await userAPI.fetchById(userId)\n  //return response.data\n  //return response;\n});\n\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState: {\n    isLoggedIn: false,\n    errorMessage: null,\n    isLoading: false\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loginAsync.pending, (state, action) => {\n      console.log(\"PENDING\");\n      return {\n        ...state,\n        isLoading: true\n      };\n    });\n    builder.addCase(loginAsync.fulfilled, (state, action) => {\n      return {\n        ...state,\n        isLoggedIn: true,\n        isLoading: false\n      };\n    });\n    builder.addCase(loginAsync.rejected, (state, action) => {\n      return {\n        ...state,\n        isLoggedIn: false,\n        errorMessage: action.payload,\n        isLoading: false\n      };\n    });\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  login\n} = loginSlice.actions;\nexport { loginAsync };\nexport default loginSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","io","socket","connect","loginAsync","credentials","thunkAPI","console","log","response","post","emit","loginSlice","name","initialState","isLoggedIn","errorMessage","isLoading","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","rejected","payload","login","actions","reducer"],"sources":["C:/Users/Matthias/Downloads/Frontend/my-app/src/features/login/loginSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\n\r\nimport axios from \"axios\";\r\nimport io from 'socket.io-client'\r\n\r\nconst socket = io.connect(\"http://localhost:3001\"); \r\n\r\nconst loginAsync = createAsyncThunk(\r\n    'login/loginAsync',\r\n    async (credentials, thunkAPI) => {\r\n        console.log(credentials)\r\n        const response = socket.post(\"/users/login\", credentials);\r\n        socket.emit(\"request_login\", credentials);\r\n        console.log(response);\r\n\r\n        //console.log(response);\r\n        //const response = await userAPI.fetchById(userId)\r\n        //return response.data\r\n        //return response;\r\n    }\r\n)\r\n\r\n\r\nexport const loginSlice = createSlice({\r\n    name: 'login',\r\n    initialState: {\r\n        isLoggedIn: false,\r\n        errorMessage: null,\r\n        isLoading: false\r\n    },\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(loginAsync.pending, (state, action) => {\r\n            console.log(\"PENDING\")\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        })\r\n        builder.addCase(loginAsync.fulfilled, (state, action) => {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                isLoading: false\r\n            }\r\n        })\r\n        builder.addCase(loginAsync.rejected, (state, action) => {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                errorMessage: action.payload,\r\n                isLoading: false\r\n            }\r\n        })\r\n    }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { login } = loginSlice.actions\r\n\r\nexport { loginAsync };\r\n\r\nexport default loginSlice.reducer"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,kBAAkB;AAEjC,MAAMC,MAAM,GAAGD,EAAE,CAACE,OAAO,CAAC,uBAAuB,CAAC;AAElD,MAAMC,UAAU,GAAGN,gBAAgB,CAC/B,kBAAkB,EAClB,OAAOO,WAAW,EAAEC,QAAQ,KAAK;EAC7BC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;EACxB,MAAMI,QAAQ,GAAGP,MAAM,CAACQ,IAAI,CAAC,cAAc,EAAEL,WAAW,CAAC;EACzDH,MAAM,CAACS,IAAI,CAAC,eAAe,EAAEN,WAAW,CAAC;EACzCE,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;;EAErB;EACA;EACA;EACA;AACJ,CAAC,CACJ;;AAGD,OAAO,MAAMG,UAAU,GAAGb,WAAW,CAAC;EAClCc,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACVC,UAAU,EAAE,KAAK;IACjBC,YAAY,EAAE,IAAI;IAClBC,SAAS,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE,CAEV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACjB,UAAU,CAACkB,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACnDjB,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtB,OAAO;QACH,GAAGe,KAAK;QACRN,SAAS,EAAE;MACf,CAAC;IACL,CAAC,CAAC;IACFG,OAAO,CAACC,OAAO,CAACjB,UAAU,CAACqB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MACrD,OAAO;QACH,GAAGD,KAAK;QACRR,UAAU,EAAE,IAAI;QAChBE,SAAS,EAAE;MACf,CAAC;IACL,CAAC,CAAC;IACFG,OAAO,CAACC,OAAO,CAACjB,UAAU,CAACsB,QAAQ,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MACpD,OAAO;QACH,GAAGD,KAAK;QACRR,UAAU,EAAE,KAAK;QACjBC,YAAY,EAAEQ,MAAM,CAACG,OAAO;QAC5BV,SAAS,EAAE;MACf,CAAC;IACL,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEW;AAAM,CAAC,GAAGhB,UAAU,CAACiB,OAAO;AAE3C,SAASzB,UAAU;AAEnB,eAAeQ,UAAU,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}