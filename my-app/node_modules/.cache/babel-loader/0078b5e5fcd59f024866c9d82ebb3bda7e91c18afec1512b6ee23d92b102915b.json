{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matthias\\\\Downloads\\\\Frontend\\\\my-app\\\\src\\\\features\\\\login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fullfilled, rejected, logout } from './loginSlice';\nimport { setUserData, clearUserData } from '../userData/userDataSlice';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\nexport function Login() {\n  _s();\n  /* Selectors and dispatchers */\n  const errorMessageSelector = useSelector(state => state.login.errorMessage);\n  const forenameSelector = useSelector(state => state.userData.forename);\n  const surnameSelector = useSelector(state => state.userData.surname);\n  const dispatch = useDispatch();\n\n  /** useRefs, useStates and useEffects */\n  const userRef = useRef();\n  const errRef = useRef();\n  const [user, setUser] = useState('');\n  const [pwd, setPwd] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd]);\n\n  /** functions */\n  const signOut = () => {\n    setSuccess(false);\n    dispatch(clearUserData());\n    dispatch(logout());\n  };\n\n  /** result gets checked (currently hardcoded) on serverside via socket.io\r\n   * and the loginstatus (in loginslice) and userData (in userDataslice) get dispatched\r\n   * in the classic Redux pattern (not 100% sure if the reducers are best practice)\r\n   */\n  const handleSubmit = async e => {\n    e.preventDefault();\n    socket.emit(\"request_login\", {\n      user,\n      pwd\n    });\n    socket.on(\"loginstatus\", (result, user) => {\n      if (result === true) {\n        dispatch(fullfilled());\n        dispatch(setUserData(user));\n        setSuccess(true);\n      } else {\n        const done = dispatch(rejected());\n        console.log(\"test\");\n        setErrMsg(errorMessageSelector);\n      }\n    });\n  };\n\n  /** success varibale gets changed to true when the login is successfull\r\n   * -> Loginsection gets replaced with a \"logged-in-section\"\r\n   */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), \"yfsg \", forenameSelector, \" \", surnameSelector, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: signOut,\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"asserive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ref: userRef,\n          autoComplete: \"off\",\n          onChange: e => setUser(e.target.value),\n          value: user,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: e => setPwd(e.target.value),\n          value: pwd,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Login, \"DWw86xC7rTbhFKLBRMT9q+zLcXE=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useRef","useState","useEffect","useSelector","useDispatch","fullfilled","rejected","logout","setUserData","clearUserData","io","socket","connect","Login","errorMessageSelector","state","login","errorMessage","forenameSelector","userData","forename","surnameSelector","surname","dispatch","userRef","errRef","user","setUser","pwd","setPwd","errMsg","setErrMsg","success","setSuccess","current","focus","signOut","handleSubmit","e","preventDefault","emit","on","result","done","console","log","target","value"],"sources":["C:/Users/Matthias/Downloads/Frontend/my-app/src/features/login/Login.js"],"sourcesContent":["import { useRef, useState, useEffect} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fullfilled, rejected, logout } from './loginSlice'\r\nimport { setUserData, clearUserData} from '../userData/userDataSlice'\r\nimport io from 'socket.io-client'\r\nconst socket = io.connect(\"http://localhost:3001\"); \r\n\r\n\r\nexport function Login() {\r\n\r\n    /* Selectors and dispatchers */\r\n    const errorMessageSelector =  useSelector((state) => state.login.errorMessage)\r\n    const forenameSelector =  useSelector((state) => state.userData.forename)\r\n    const surnameSelector =  useSelector((state) => state.userData.surname)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    /** useRefs, useStates and useEffects */\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [user, setUser] = useState('');\r\n    const [pwd, setPwd] = useState('');\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    useEffect(() => {\r\n        userRef.current.focus()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [user, pwd])\r\n\r\n\r\n    /** functions */\r\n    const signOut = () => {\r\n        setSuccess(false)\r\n        dispatch(clearUserData())\r\n        dispatch(logout())\r\n    }\r\n\r\n    /** result gets checked (currently hardcoded) on serverside via socket.io\r\n     * and the loginstatus (in loginslice) and userData (in userDataslice) get dispatched\r\n     * in the classic Redux pattern (not 100% sure if the reducers are best practice)\r\n     */\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        socket.emit(\"request_login\", {user, pwd});\r\n        socket.on(\"loginstatus\", (result, user) => {\r\n            if (result === true) {\r\n                dispatch(fullfilled())\r\n                dispatch(setUserData(user))\r\n                setSuccess(true)\r\n            } else {\r\n                const done = dispatch(rejected())\r\n                console.log(\"test\")\r\n                setErrMsg(errorMessageSelector)\r\n            }\r\n        })\r\n    }\r\n\r\n    /** success varibale gets changed to true when the login is successfull\r\n     * -> Loginsection gets replaced with a \"logged-in-section\"\r\n     */\r\n    return (\r\n        <> {success ? (\r\n            <section>\r\n                <h1>Hello </h1>\r\n                 yfsg {forenameSelector} {surnameSelector}\r\n                <br/>\r\n                <p>\r\n                    <button onClick={signOut}>Sign Out</button>\r\n                </p>\r\n            </section>\r\n        ): (\r\n        <section>\r\n            <p \r\n                ref={errRef}\r\n                className={errMsg? \"errmsg\": \"offscreen\"}\r\n                aria-live=\"asserive\">{errMsg}\r\n            </p>\r\n            <h1>Sign In</h1>\r\n            <form>\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input \r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    ref={userRef}\r\n                    autoComplete= \"off\"\r\n                    onChange={(e) => setUser(e.target.value)}\r\n                    value={user}\r\n                    required\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input \r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    onChange={(e) => setPwd(e.target.value)}\r\n                    value={pwd}\r\n                    required\r\n                />\r\n                <button onClick={handleSubmit}>Sign In</button>\r\n            </form>\r\n        </section>\r\n        )}\r\n        </>\r\n    )\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}